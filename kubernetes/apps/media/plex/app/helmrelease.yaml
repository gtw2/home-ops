---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.41.8.9834@sha256:40e620ffcdc65331a0c2a7ed9a95700da7d527244f33c21bd35fc30aa25f19ea
            env:
              TZ: America/New_York
              PLEX_ADVERTISE_URL: https://plex.westphal.io:443,http://10.10.40.100:32400
              PLEX_NO_AUTH_NETWORKS: ${NODE_CIDR}
            envFrom:
              - secretRef:
                  name: plex-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 200m
                memory: 2Gi
              limits:
                gpu.intel.com/i915: 1
                memory: 16Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44]
    service:
      app:
        controller: *app
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 10.10.40.100
        ports:
          http:
            port: 32400
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.westphal.io"
        annotations:
          external-dns.alpha.kubernetes.io/target: external.westphal.io
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          # cert-manager.io/cluster-issuer: letsencrypt-production
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: plex.png
          gethomepage.dev/name: Plex
          gethomepage.dev/group: Media
          gethomepage.dev/weight: "20"
          gethomepage.dev/widget.type: plex
          gethomepage.dev/widget.url: http://plex.media:32400
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PLEX_KEY}}` }}"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
            filters:
              - type: RequestHeaderModifier
                requestHeaderModifier:
                  remove: ["Range"]
            matches:
              - path:
                  type: PathPrefix
                  value: /library/streams
          - backendRefs:
              - identifier: app
    # ingress:
    #   app:
    #     className: external
    #     annotations:
    #       external-dns.alpha.kubernetes.io/target: external.westphal.io
    #       nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    #       # cert-manager.io/cluster-issuer: letsencrypt-production
    #       gethomepage.dev/enabled: "true"
    #       gethomepage.dev/icon: plex.png
    #       gethomepage.dev/name: Plex
    #       gethomepage.dev/group: Media
    #       gethomepage.dev/weight: "20"
    #       gethomepage.dev/widget.type: plex
    #       gethomepage.dev/widget.url: http://plex.media:32400
    #       gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PLEX_KEY}}` }}"
    #     hosts:
    #       - host: "{{ .Release.Name }}.westphal.io"
    #         paths:
    #           - path: /
    #             service:
    #               identifier: app
    #               port: http
    persistence:
      config:
        existingClaim: *app
        # advancedMounts:
        #   plex:
        #     app:
        #       - path: /config
      plex-cache:
        existingClaim: plex-cache
        advancedMounts:
          plex:
            app:
              - path: /config/Library/Application Support/Plex Media Server/Cache
      logs:
        type: emptyDir
        advancedMounts:
          plex:
            app:
              - path: /config/Library/Application Support/Plex Media Server/Logs
      tmp:
        type: emptyDir
        advancedMounts:
          plex:
            app:
              - path: /tmp
      transcode:
        type: emptyDir
        advancedMounts:
          plex:
            app:
              - path: /transcode
      media:
        enabled: true
        type: nfs
        server: 10.10.40.4
        path: "/mnt/sega/PlexNAS/Compressed"
        globalMounts:
          - path: /media
            readOnly: true
      dvr:
        type: nfs
        server: 10.10.40.4
        path: "/mnt/sega/PlexNAS/DVR"
        globalMounts:
          - path: /dvr
