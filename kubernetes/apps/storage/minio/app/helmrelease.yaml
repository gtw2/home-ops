---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app minio
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      minio:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2025-04-22T22-12-26Z
            env:
              TZ: "America/New_York"
              MINIO_UPDATE: "off"
              MINIO_PROMETHEUS_URL: http://kube-prometheus-stack-prometheus.observability:9090
              MINIO_PROMETHEUS_JOB_ID: minio
              MINIO_PROMETHEUS_AUTH_TYPE: public
              MINIO_BROWSER_REDIRECT_URL: https://minio.${SECRET_DOMAIN}
              # This breaks all login attempts to the webpage
              # MINIO_SERVER_URL: https://s3.${SECRET_DOMAIN}
              MINIO_API_CORS_ALLOW_ORIGIN: https://minio.${SECRET_DOMAIN},https://s3.${SECRET_DOMAIN}
            envFrom:
              - secretRef:
                  name: minio-secret
            args: ["server", "/data", "--console-address", ":9001"]
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /minio/health/live
                    port: &api-port 9000
                  initialDelaySeconds: 30
                  periodSeconds: 30
                  timeoutSeconds: 10
                  failureThreshold: 6
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                memory: 100Mi
                cpu: 100m
              limits:
                memory: 2000Mi
        # pod:
        #   securityContext:
        #     runAsUser: 3000
        #     runAsGroup: 3000
        #     fsGroup: 3000
        #     fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 9001
          s3:
            port: *api-port
    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: s3
            scheme: http
            path: /minio/v2/metrics/cluster
            interval: 1m
            scrapeTimeout: 10s
    route:
      main:
        enabled: true
        kind: HTTPRoute
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Storage
          gethomepage.dev/name: Minio
          gethomepage.dev/icon: minio.svg
          gethomepage.dev/description: S3 Object Storage
          gethomepage.dev/pod-selector: app.kubernetes.io/name=minio
        hostnames:
          - minio.${SECRET_DOMAIN}
        rules:
          - backendRefs:
              - name: *app
                port: *port
            matches:
              - path:
                  type: PathPrefix
                  value: /
      s3:
        enabled: true
        kind: HTTPRoute
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        hostnames:
          - s3.${SECRET_DOMAIN}
        rules:
          - backendRefs:
              - name: *app
                port: *api-port
            matches:
              - path:
                  type: PathPrefix
                  value: /
    persistence:
      config:
        existingClaim: minio-nfs
        globalMounts:
          - path: /data
