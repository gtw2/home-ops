---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app romm
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  interval: 30m
  maxHistory: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    controllers:
      romm:
        annotations:
          secret.reloader.stakater.com/reload: &secret romm-secret
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: *secret
        containers:
          app:
            image:
              repository: ghcr.io/rommapp/romm
              tag: 3.10.2
            env:
              TZ: ${TIMEZONE}
              ROMM_DB_DRIVER: postgresql
              REDIS_HOST: dragonfly.database.svc.cluster.local
              REDIS_PORT: 6379
              REDIS_DB: 4
              OIDC_ENABLED: true
              OIDC_PROVIDER: authentik
              OIDC_REDIRECT_URI: https://romm.${SECRET_DOMAIN}/api/oauth/openid
              OIDC_SERVER_APPLICATION_URL: https://sso.${SECRET_DOMAIN}/application/o/romm
            envFrom:
              - secretRef:
                  name: *secret
            probes:
              liveness: &probes
                enabled: true
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 10m
                memory: 500Mi
              limits:
                memory: 1Gi
    service:
      app:
        controller: *app
        ports:
          http:
            port: 8080
    route:
      app:
        hostnames: ["{{ .Release.Name }}.westphal.io"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
    # ingress:
    #   app:
    #     className: external
    #     annotations:
    #       external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
    #       gethomepage.dev/enabled: "true"
    #       gethomepage.dev/description: Rom emulator
    #       gethomepage.dev/group: Media
    #       gethomepage.dev/icon: sh-romm.png
    #       gethomepage.dev/name: Romm
    #     hosts:
    #       - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
    #         paths:
    #           - path: /
    #             service:
    #               identifier: app
    #               port: http
    #     tls:
    #       - hosts: [*host]
    persistence:
      data:
        existingClaim: *app
        advancedMounts:
          romm:
            app:
              - path: /romm/config
                subPath: config
              - path: /romm/assets
                subPath: assets
              - path: /romm/resources
                subPath: resources
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
      games:
        type: nfs
        server: "${SECRET_NFS_SERVER}"
        path: "/mnt/sega/PlexNAS/Games"
        advancedMounts:
          romm:
            app:
              - path: /romm/library
